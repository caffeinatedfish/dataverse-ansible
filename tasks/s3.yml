---
- name: we need awscli on 7
  yum:
    name: awscli
    state: latest
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
- name: we need awscli on 8
  pip:
    name: awscli
    executable: pip3
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
- name: ensure dot dir exists
  file:
    path: ~{{ dataverse.payara.user }}/.aws
    state: directory
    owner: "{{ dataverse.payara.user }}"
    group: "{{ dataverse.payara.group }}"
    mode: "0700"
- name: place aws credentials
  template:
    src: aws_credentials.j2
    dest: ~{{ dataverse.payara.user }}/.aws/credentials
    owner: "{{ dataverse.payara.user }}"
    group: "{{ dataverse.payara.group }}"
    mode: "0600"
- name: place aws config
  template:
    src: aws_config.j2
    dest: ~{{ dataverse.payara.user }}/.aws/config
    owner: "{{ dataverse.payara.user }}"
    group: "{{ dataverse.payara.group }}"
    mode: "0600"
- name: Remove existing custom-endpoint-url JVM option
  shell: '/usr/local/payara5/bin/asadmin delete-jvm-options \"-Ddataverse.files.s3.custom-endpoint-url=https\\://s3.amazonaws.com\"'
- name: Remove existing upload-redirect JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
  "-Ddataverse.files.s3.upload-redirect=True"'
  ignore_errors: true
- name: Remove existing download-redirect JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.download-redirect=True"'
  ignore_errors: true
- name: Remove existing payload-signing JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.payload-signing=True"'
  ignore_errors: true
- name: Remove existing storage-driver-id JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.storage-driver-id=s3"'
  ignore_errors: true
- name: set storage-driver-id to s3
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.storage-driver-id={{ s3.storage_driver_id }}"'
- name: Remove existing s3 type JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.type=s3"'
  ignore_errors: true
- name: set s3 type to s3
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.type={{ s3.files_type }}"'
- name: Remove existing s3 label JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.label=s3-dataverse"'
  ignore_errors: true
- name: set s3 label to s3
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.label={{ s3.label }}"'
- name: Remove existing s3 bucket name JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.bucket-name={{s3.bucket_name}}"'
  ignore_errors: true
- name: set s3 bucket name
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.bucket-name={{ s3.bucket_name }}"'
- name: Remove existing s3 url expiration minutes JVM option
  shell: '{{ payara_dir}}/bin/asadmin delete-jvm-options
    "-Ddataverse.files.s3.url-expiration-minutes={{s3.url_expiration_minutes}}"'
  ignore_errors: true
- name: set s3 url expiration minutes
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.url-expiration-minutes={{ s3.url_expiration_minutes
    }}"'
- name: expose custom_endpoint_url as variable
  set_fact:
    custom_endpoint_url: "{{ s3.custom_endpoint_url }}"
- name: create S3 bucket
  shell: aws s3api create-bucket --bucket {{ s3.bucket_name }}
  args:
    executable: /bin/bash
  become_user: "{{ dataverse.payara.user }}"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}:/usr/local/bin"
  when: s3.create_bucket == true and custom_endpoint_url | length == 0
- name: place s3_cors.json template
  template:
    src: s3_cors.json.j2
    dest: ~{{ dataverse.payara.user }}/s3_cors.json
    owner: "{{ dataverse.payara.user }}"
    group: "{{ dataverse.payara.group }}"
    mode: 644
  when: (s3.download_redirect == true or s3.upload_redirect == true) and
    s3.cors_already_set == false
- name: enable CORS on S3 bucket
  shell: aws s3api put-bucket-cors --bucket {{ s3.bucket_name }}
    --cors-configuration file://~{{ dataverse.payara.user }}/s3_cors.json
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ dataverse.payara.user }}"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}:/usr/local/bin"
<<<<<<< HEAD
  when: (s3.download_redirect == true or s3.upload_redirect == true) and
    custom_endpoint_url | length == 0 and s3.cors_already_set == false
- include: s3_custom_endpoint_url.yml
=======
  when: (s3.download_redirect == true or s3.upload_redirect == true)
    and custom_endpoint_url | length == 0
    and s3.cors_already_set == false

- ansible.builtin.include_tasks: s3_custom_endpoint_url.yml
>>>>>>> 5bc4f2b43f25f7d2e30a94e2128a23aa976fdabf
  when: custom_endpoint_url | length > 0
- name: set s3 direct download
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.download-redirect={{ s3.download_redirect }}"'
  when: s3.download_redirect == true
- name: set s3 direct upload
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.upload-redirect={{ s3.upload_redirect }}"'
  when: s3.upload_redirect == true
- name: set s3 path style access
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.path-style-access={{ s3.path_style_access }}"'
  when: s3.path_style_access == true
- name: set s3 payload signing
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.payload-signing={{ s3.payload_signing }}"'
  when: s3.payload_signing == true
- name: turn chunked encoding off
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.chunked-encoding={{ s3.chunked_encoding }}"'
  when: s3.chunked_encoding == false
- name: set custom endpoint region
  shell: '{{ payara_dir}}/bin/asadmin create-jvm-options
    "-Ddataverse.files.s3.custom-endpoint-region={{ s3.custom_endpoint_region
    }}"'
  when: s3.custom_endpoint_region is defined and s3.custom_endpoint_region != ''

